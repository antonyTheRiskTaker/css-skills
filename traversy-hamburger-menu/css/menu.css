.menu-wrap {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1;
}

.menu-wrap .toggler {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
  cursor: pointer;
  width: 50px;
  height: 50px;
  /* (Line below) to hide the toggler */
  opacity: 0;
}

.menu-wrap .hamburger {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  width: 60px;
  height: 60px;
  padding: 1rem;
  background-color: var(--primary-color);
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Hamburger line */
/* (Line below) remember that empty div element, which serves as the middle line of the hamburger button */
.menu-wrap .hamburger > div {
  position: relative;
  width: 100%;
  /* (Line below) a variable can be created to hold the hamburger button lines */
  height: 2px;
  background-color: #ffffff;
  display: flex;
  align-items: center;
  justify-content: center;
  /* (Line below) CSS rule that allows the rotation animation for the hamburger button to run smoothly */
  transition: all 0.4s ease;
}

/* Top and bottom lines */
.menu-wrap .hamburger > div:before,
.menu-wrap .hamburger > div:after {
  content: '';
  position: absolute;
  z-index: 1;
  /* (Line below) first, move both hamburger lines above the middle one */
  top: -10px;
  width: 100%;
  /* (Line below) a variable can be created to hold the hamburger button lines */
  height: 2px;
  background: inherit;
}

.menu-wrap .hamburger > div:after {
  top: 10px;
}

/* Toggler animate */
.menu-wrap .toggler:checked + .hamburger > div {
  transform: rotate(135deg);
}

/* Turn lines into X */

.menu-wrap .toggler:checked + .hamburger > div:before,
.menu-wrap .toggler:checked + .hamburger > div:after {
  top: 0;
  transform: rotate(90deg);
}

/* Rotate on hover when checked */
